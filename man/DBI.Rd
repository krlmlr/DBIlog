% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Driver.R, R/Connection.R, R/Result.R
\docType{class}
\name{DBI}
\alias{DBI}
\alias{LoggingDBIDriver-class}
\alias{show,LoggingDBIDriver-method}
\alias{dbConnect,LoggingDBIDriver-method}
\alias{dbDataType,LoggingDBIDriver-method}
\alias{dbIsValid,LoggingDBIDriver-method}
\alias{dbGetInfo,LoggingDBIDriver-method}
\alias{LoggingDBIConnection-class}
\alias{show,LoggingDBIConnection-method}
\alias{dbIsValid,LoggingDBIConnection-method}
\alias{dbDisconnect,LoggingDBIConnection-method}
\alias{dbSendQuery,LoggingDBIConnection,character-method}
\alias{dbSendStatement,LoggingDBIConnection,character-method}
\alias{dbDataType,LoggingDBIConnection-method}
\alias{dbQuoteString,LoggingDBIConnection,character-method}
\alias{dbQuoteIdentifier,LoggingDBIConnection,character-method}
\alias{dbUnquoteIdentifier,LoggingDBIConnection,SQL-method}
\alias{dbWriteTable,LoggingDBIConnection,character,data.frame-method}
\alias{dbReadTable,LoggingDBIConnection,character-method}
\alias{dbListTables,LoggingDBIConnection-method}
\alias{dbExistsTable,LoggingDBIConnection,character-method}
\alias{dbListFields,LoggingDBIConnection,character-method}
\alias{dbRemoveTable,LoggingDBIConnection,character-method}
\alias{dbGetInfo,LoggingDBIConnection-method}
\alias{dbBegin,LoggingDBIConnection-method}
\alias{dbCommit,LoggingDBIConnection-method}
\alias{dbRollback,LoggingDBIConnection-method}
\alias{LoggingDBIResult-class}
\alias{show,LoggingDBIResult-method}
\alias{dbClearResult,LoggingDBIResult-method}
\alias{dbFetch,LoggingDBIResult-method}
\alias{dbHasCompleted,LoggingDBIResult-method}
\alias{dbGetInfo,LoggingDBIResult-method}
\alias{dbIsValid,LoggingDBIResult-method}
\alias{dbGetStatement,LoggingDBIResult-method}
\alias{dbColumnInfo,LoggingDBIResult-method}
\alias{dbGetRowCount,LoggingDBIResult-method}
\alias{dbGetRowsAffected,LoggingDBIResult-method}
\alias{dbBind,LoggingDBIResult-method}
\title{DBI methods}
\usage{
\S4method{show}{LoggingDBIDriver}(object)

\S4method{dbConnect}{LoggingDBIDriver}(drv, ...)

\S4method{dbDataType}{LoggingDBIDriver}(dbObj, obj, ...)

\S4method{dbIsValid}{LoggingDBIDriver}(dbObj, ...)

\S4method{dbGetInfo}{LoggingDBIDriver}(dbObj, ...)

\S4method{show}{LoggingDBIConnection}(object)

\S4method{dbIsValid}{LoggingDBIConnection}(dbObj, ...)

\S4method{dbDisconnect}{LoggingDBIConnection}(conn, ...)

\S4method{dbSendQuery}{LoggingDBIConnection,character}(conn, statement,
  ...)

\S4method{dbSendStatement}{LoggingDBIConnection,character}(conn, statement,
  ...)

\S4method{dbDataType}{LoggingDBIConnection}(dbObj, obj, ...)

\S4method{dbQuoteString}{LoggingDBIConnection,character}(conn, x, ...)

\S4method{dbQuoteIdentifier}{LoggingDBIConnection,character}(conn, x, ...)

\S4method{dbUnquoteIdentifier}{LoggingDBIConnection,SQL}(conn, x, ...)

\S4method{dbWriteTable}{LoggingDBIConnection,character,data.frame}(conn,
  name, value, overwrite = FALSE, append = FALSE, ...)

\S4method{dbReadTable}{LoggingDBIConnection,character}(conn, name, ...)

\S4method{dbListTables}{LoggingDBIConnection}(conn, ...)

\S4method{dbExistsTable}{LoggingDBIConnection,character}(conn, name, ...)

\S4method{dbListFields}{LoggingDBIConnection,character}(conn, name, ...)

\S4method{dbRemoveTable}{LoggingDBIConnection,character}(conn, name, ...)

\S4method{dbGetInfo}{LoggingDBIConnection}(dbObj, ...)

\S4method{dbBegin}{LoggingDBIConnection}(conn, ...)

\S4method{dbCommit}{LoggingDBIConnection}(conn, ...)

\S4method{dbRollback}{LoggingDBIConnection}(conn, ...)

\S4method{show}{LoggingDBIResult}(object)

\S4method{dbClearResult}{LoggingDBIResult}(res, ...)

\S4method{dbFetch}{LoggingDBIResult}(res, n = -1, ...)

\S4method{dbHasCompleted}{LoggingDBIResult}(res, ...)

\S4method{dbGetInfo}{LoggingDBIResult}(dbObj, ...)

\S4method{dbIsValid}{LoggingDBIResult}(dbObj, ...)

\S4method{dbGetStatement}{LoggingDBIResult}(res, ...)

\S4method{dbColumnInfo}{LoggingDBIResult}(res, ...)

\S4method{dbGetRowCount}{LoggingDBIResult}(res, ...)

\S4method{dbGetRowsAffected}{LoggingDBIResult}(res, ...)

\S4method{dbBind}{LoggingDBIResult}(res, params, ...)
}
\arguments{
\item{object}{Any R object}

\item{drv}{an object that inherits from \linkS4class{DBIDriver},
or an existing \linkS4class{DBIConnection}
object (in order to clone an existing connection).}

\item{...}{authentication arguments needed by the DBMS instance; these
typically include \code{user}, \code{password}, \code{host}, \code{port}, \code{dbname}, etc.
For details see the appropriate \code{DBIDriver}.}

\item{dbObj}{A object inheriting from \linkS4class{DBIDriver}
or \linkS4class{DBIConnection}}

\item{obj}{An R object whose SQL type we want to determine.}

\item{conn}{A \linkS4class{DBIConnection} object, as returned by
\code{\link[=dbConnect]{dbConnect()}}.}

\item{statement}{a character string containing SQL.}

\item{x}{A character vector to quote as string.}

\item{name}{A character string specifying the unquoted DBMS table name,
or the result of a call to \code{\link[=dbQuoteIdentifier]{dbQuoteIdentifier()}}.}

\item{value}{a \link{data.frame} (or coercible to data.frame).}

\item{overwrite}{Allow overwriting the destination table. Cannot be
\code{TRUE} if \code{append} is also \code{TRUE}.}

\item{append}{Allow appending to the destination table. Cannot be
\code{TRUE} if \code{overwrite} is also \code{TRUE}.}

\item{res}{An object inheriting from \linkS4class{DBIResult}.}

\item{n}{maximum number of records to retrieve per fetch. Use \code{n = -1}
or \code{n = Inf}
to retrieve all pending records.  Some implementations may recognize other
special values.}

\item{params}{A list of bindings, named or unnamed.}
}
\description{
Implementations of pure virtual functions defined in the \code{DBI} package.
}
